# syntax=docker/dockerfile:1.4

########## deps: full install, cached ##########
FROM --platform=linux/arm64 node:22-bookworm-slim AS deps
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app
COPY package.json pnpm-lock.yaml source.config.ts next.config.mjs ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install --frozen-lockfile

########## build: compile Next/Fumadocs ##########
FROM deps AS build
WORKDIR /app
COPY tailwind.config.js postcss.config.mjs next-sitemap.config.js ./
COPY . .
ENV NEXT_TELEMETRY_DISABLED=1
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm run build
RUN pnpm prune --prod

########## runtime: slim, prod-only ##########
FROM --platform=linux/arm64 node:22-bookworm-slim AS runtime
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app
ENV NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    LD_LIBRARY_PATH=/usr/lib:/usr/local/lib \
    npm_config_ignore_scripts=true

COPY package.json pnpm-lock.yaml source.config.ts next.config.mjs ./
COPY --from=build --chown=node:node /app/.next        ./.next
COPY --from=build --chown=node:node /app/public       ./public
COPY --from=build --chown=node:node /app/.source      ./.
COPY --from=build --chown=node:node /app/node_modules ./node_modules

EXPOSE 3000
USER node
RUN mkdir -p .next/cache/images
CMD ["pnpm", "start"]
